#
#
# This file is part of Appcelerator.
#
# Copyright 2006-2008 Appcelerator, Inc.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
BUILD_DIR = File.dirname(__FILE__)
require File.expand_path("#{BUILD_DIR}/../build.rb")

desc 'build all themes'
task :all => [:default] do
end

task :default => [:stage] do
  
  theme_dir = "#{STAGE_DIR}"
  
  themes = []

  Dir["#{BUILD_DIR}/*"].each do |typedir|
    next unless File.directory?(typedir)
    type = File.basename(typedir)
    Dir["#{BUILD_DIR}/#{type}/*"].each do |dir|
      next unless File.directory?(dir)
      name = File.basename(dir)
      Dir["#{BUILD_DIR}/#{type}/#{name}/*"].each do |themedir|
        next unless File.directory?(themedir)
        themename = File.basename(themedir)
        themes << {:name=>themename,:dir=>themedir,:filename=>"theme_#{name}_#{themename}.zip"}
      end
    end
  end
  
  themes.uniq.each do |entry|
    FileUtils.cd(entry[:dir]) do |dir|
      $stderr.puts "!! Invalid control theme - no Rakefile found in #{dir}" unless File.exists? "#{dir}/Rakefile"
      next unless File.exists? "#{dir}/Rakefile"
      puts entry[:filename]
      call_rake
      FileUtils.cp_r "#{entry[:name]}.zip", "#{theme_dir}/#{entry[:filename]}"
    end
  end
  
  FileUtils.rm_rf "#{STAGE_DIR}/all_themes.zip"
  
  Zip::ZipFile.open("#{STAGE_DIR}/all_themes.zip", Zip::ZipFile::CREATE) do |zipfile|
    dofiles("#{STAGE_DIR}") do |f|
      filename = f.to_s
      next unless File.extname(filename)=='.zip'
      next if filename == '.'
      zipfile.add(filename,"#{STAGE_DIR}/#{filename}")
    end
	 zipfile.get_output_stream('build.yml') do |o|
	   c = {:name=>'allthemes',:type=>'allthemes',:version=>1.0}	
	   o.puts c.to_yaml
    end
  end
  
  themes.each do |name|
    FileUtils.rm_rf "#{BUILD_DIR}/#{name}/#{name}.zip"
  end
  
end
