#
# This file is part of Appcelerator.
#
# Copyright 2006-2008 Appcelerator, Inc.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
cwd = File.expand_path(File.dirname(__FILE__))
require File.join(cwd, '..', 'build', 'build.rb')
require File.join(RUNTIME_DIR, 'build.rb')
require File.join(WEBSDK_DIR, 'build.rb')

directory_to_namespace(:service, SERVICES_DIR, ['common'])
directory_to_namespace(:behavior, BEHAVIORS_DIR)
directory_to_namespace(:control, CONTROLS_DIR)
directory_to_namespace(:layout, LAYOUTS_DIR)
directory_to_namespace(:widget, WIDGETS_DIR)

directory_to_namespace([:theme, :layout], File.join(THEMES_DIR, "layouts"))
directory_to_namespace([:theme, :behavior], File.join(THEMES_DIR, "behaviors"))
directory_to_namespace([:theme, :control], File.join(THEMES_DIR, "controls"))

task :default => [:all] do
end

task :cleanup do
    # cleanup shouldn't be necessary any longer
end

task :all => %w(widget:all layout:all behavior:all control:all theme:all service:all websdk:all runtime:all) do
end

desc 'prepare stage dir'
task :stage do
  FileUtils.mkdir STAGE_DIR unless File.exists?(STAGE_DIR)
end

desc 'cleans stage dir'
task :clean do
  if Pathname.new(STAGE_DIR).exist?
    FileUtils.rm_r STAGE_DIR
  end
end

desc 'Release a component'
task :release, :name, :version do |t, args|
    fullname = args.name
    version = args.version

    if (File.exists?(fullname))
        puts "Trying to release file: #{fullname}"
        file = File.expand_path(fullname)

    else

        # try parsing release name
        (type, name) = fullname.split(':', 2)
        if name.to_s.include?(':')
            (subtype, name) = name.split(':', 2)
            type = [type.to_sym, subtype.to_sym]
        else
            type = type.to_sym
            subtype = nil
        end
        name = name.to_sym

        config = get_config(type, name)
        task = Rake::Task[fullname]
        if config.nil?
            $stderr.puts "No configuration available for #{type.inspect} named #{name}"
            exit
        end

        if task.nil?
            $stderr.puts "No rake task named #{fullname}"
            exit
        end

        if version.nil?
           version = MANIFEST.get_next_version_for(type, name)
        elsif not version.include?('.')
           version = CONFIG[:version].to_s + ".#{version}"
        end
        config[:version] = version

        type = type.join('_') if type.class == Array
        output_file = File.join(STAGE_DIR, "#{type}-#{name}-#{version}.zip")
        config[:output_filename] = output_file 

        puts "Trying to build and release #{fullname} #{version}"

        task.invoke()
        file = config[:output_filename]

    end

end
