#
# This file is part of Appcelerator.
#
# Copyright (c) 2006-2008, Appcelerator, Inc.
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
# 
#     * Redistributions in binary form must reproduce the above copyright notice,
#       this list of conditions and the following disclaimer in the documentation
#       and/or other materials provided with the distribution.
# 
#     * Neither the name of Appcelerator, Inc. nor the names of its
#       contributors may be used to endorse or promote products derived from this
#       software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# Plugin Rakefile
#

require 'rake'
require 'fileutils'
require 'zip/zip'
require 'yaml'
require 'find'
require 'pathname'

NAME = 'java_spring'
ZIPFILE = File.expand_path "#{NAME}.zip"

desc 'default build which makes the plugin'
task :default => [:zip] do

end

desc 'zip up the plugin'
task :zip do
  src_dir = File.expand_path "#{File.dirname(__FILE__)}/src"
  etc_dir = File.expand_path "#{File.dirname(__FILE__)}/etc"
  templates_dir = File.expand_path "#{File.dirname(__FILE__)}/templates"
  FileUtils.rm_r ZIPFILE if File.exists? ZIPFILE
  Zip::ZipFile.open(ZIPFILE, Zip::ZipFile::CREATE) do |zipfile|
    [etc_dir,templates_dir].each do |dir|
      Find.find(dir) do |path|
          pathname = Pathname.new(path)
          if not path.include? '.svn' and pathname.file?
            filename = pathname.relative_path_from(Pathname.new(dir))
            name=path.gsub(File.dirname(__FILE__)+'/','')
            zipfile.add(name,dir+'/'+filename)
          end
      end 
    end
    Find.find(src_dir) do |path|
        pathname = Pathname.new(path)
        if not path.include? '.svn' and pathname.file?
          filename = pathname.relative_path_from(Pathname.new(src_dir))
          zipfile.add(filename,src_dir+'/'+filename)
        end
    end
    zipfile.add('build.yml','build.yml')
    zipfile.add('spring_license.txt','spring_license.txt')
    zipfile.add('spring_notice.txt','spring_notice.txt')
  end
end

desc 'install the plugin'
task :install => [:zip] do
  system "appcelerator install:plugin #{ZIPFILE}"
end

desc 'release the plugin'
task :release => [:zip] do
  system "appcelerator release:plugin #{ZIPFILE}"
end


