#
# This file is part of Appcelerator.
#
# Copyright 2006-2008 Appcelerator, Inc.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

#
# Plugin Rakefile
#

require 'rake'
require 'fileutils'
require 'zip/zip'
require 'yaml'
require 'find'
require 'pathname'

NAME = 'java_spring'
ZIPFILE = File.expand_path "#{NAME}.zip"

desc 'default build which makes the plugin'
task :default => [:zip] do

end

desc 'zip up the plugin'
task :zip do
  src_dir = File.expand_path "#{File.dirname(__FILE__)}/src"
  etc_dir = File.expand_path "#{File.dirname(__FILE__)}/etc"
  templates_dir = File.expand_path "#{File.dirname(__FILE__)}/templates"
  FileUtils.rm_r ZIPFILE if File.exists? ZIPFILE
  Zip::ZipFile.open(ZIPFILE, Zip::ZipFile::CREATE) do |zipfile|
    [etc_dir,templates_dir].each do |dir|
      Find.find(dir) do |path|
          pathname = Pathname.new(path)
          if not path.include? '.svn' and pathname.file?
            filename = pathname.relative_path_from(Pathname.new(dir))
            name=path.gsub(File.dirname(__FILE__)+'/','')
            zipfile.add(name,dir+'/'+filename)
          end
      end 
    end
    Find.find(src_dir) do |path|
        pathname = Pathname.new(path)
        if not path.include? '.svn' and pathname.file?
          filename = pathname.relative_path_from(Pathname.new(src_dir))
          zipfile.add(filename,src_dir+'/'+filename)
        end
    end
    zipfile.add('build.yml','build.yml')
    zipfile.add('spring_license.txt','spring_license.txt')
    zipfile.add('spring_notice.txt','spring_notice.txt')
  end
end

desc 'install the plugin'
task :install => [:zip] do
  system "appcelerator install:plugin #{ZIPFILE}"
end

desc 'release the plugin'
task :release => [:zip] do
  system "appcelerator release:plugin #{ZIPFILE}"
end


