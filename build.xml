<?xml version="1.0"?>

<!-- ==================================================================== -->
<!-- Appcelerator Platform SDK                                            -->	
<!-- ==================================================================== -->

<project name="Appcelerator Platform SDK" default="dist" basedir=".">

    <description>Appcelerator Platform SDK</description>

    <property file="${user.home}/.ant.properties"/>
    <property file="build.properties"/>

	<path id="classpath">
		<fileset dir="${build.java.dir}/lib" includes="*.jar"/>
	</path>

	<target name="dist" depends="build_sdk,build_server"></target>
	
	<target name="clean" description="* Removes temporary build directories">
		<delete dir="${stage.dir}"/>
	</target>

	<target name="init">
		<mkdir dir="${stage.dir}"/>
		<tstamp/>
        <property name="APP_VERSION" value="${version.major}.${version.minor}.${version.rev}"/>
        <property name="APP_DATE" value="${DSTAMP} ${TSTAMP}"/>
        <property name="VERSION" value="${APP_VERSION}"/>		
	</target>
	
	<target name="build_core_javascript" depends="init" description="* Builds the core JS framework">
		<delete file="${stage.dir}/web/js/appcelerator.js" failonerror="no"/>
		<delete file="${stage.dir}/web/js/appcelerator-temp.js" failonerror="no"/>
		<delete file="${stage.dir}/web/js/appcelerator-debug.js" failonerror="no"/>
		<concat destfile="${stage.dir}/web/js/appcelerator-debug.js" append="no">
			<fileset file="${build.dir}/license_header.txt"/>
		</concat>
		<concat destfile="${stage.dir}/web/js/appcelerator-debug.js" append="yes" fixlastline="yes">
/* The following files are subject to license agreements by their respective license owners */
		</concat>
		<concat destfile="${stage.dir}/web/js/appcelerator-debug.js" append="yes">
			<fileset file="${build.web.dir}/prototype/prototype.js"/>
			<fileset file="${build.web.dir}/scriptaculous/scriptaculous.js"/>
			<fileset file="${build.web.dir}/scriptaculous/effects.js"/>
			<fileset file="${build.web.dir}/scriptaculous/dragdrop.js"/>
		</concat>
		<concat destfile="${stage.dir}/web/js/appcelerator-debug.js" append="yes" fixlastline="yes">
/* END THIRD PARTY SOURCE */
		</concat>
		<concat destfile="${stage.dir}/web/js/appcelerator-debug.js" append="yes">
			<fileset file="${src.web.dir}/js/bootstrap.js"/>
			<filterchain>
				<expandproperties/>
			</filterchain>
		</concat>
		<concat destfile="${stage.dir}/web/js/appcelerator-debug.js" append="yes">
			<fileset file="${src.web.dir}/js/core.js"/>
			<fileset file="${src.web.dir}/js/debug.js"/>
			<fileset file="${src.web.dir}/js/string.js"/>
			<fileset file="${src.web.dir}/js/object.js"/>
			<fileset file="${src.web.dir}/js/datetime.js"/>
			<fileset file="${src.web.dir}/js/config.js" />
			<fileset file="${src.web.dir}/js/compiler.js"/>
			<fileset file="${src.web.dir}/js/dom.js"/>
			<fileset file="${src.web.dir}/js/cookie.js"/>
			<fileset file="${src.web.dir}/js/servicebroker.js"/>
			<fileset dir="${src.web.dir}/js">
				<include name="**/*.js"/>
				<exclude name="bootstrap.js"/>
				<exclude name="core.js"/>
				<exclude name="compiler.js"/>
				<exclude name="dom.js"/>
				<exclude name="debug.js"/>
				<exclude name="string.js"/>
				<exclude name="cookie.js"/>
				<exclude name="config.js"/>
				<exclude name="datetime.js"/>
				<exclude name="object.js"/>
				<exclude name="servicebroker.js"/>
			</fileset>
		</concat>
		<antcall target="jsmin"/>
		<antcall target="nojsmin"/>
	</target>
	<target name="nomin">
		<property name="dont.jsmin" value="anything"/>
	</target>
	<target name="jsmin" unless="dont.jsmin">
    	<exec executable="ruby" failonerror="true" failifexecutionfails="true">
    		<arg line="${build.bin.dir}/jsmin.rb"/>
    		<arg line="${stage.dir}/web/js/appcelerator-debug.js"/>
    		<arg line="${stage.dir}/web/js/appcelerator-temp.js"/>
    	</exec>
		<concat destfile="${stage.dir}/web/js/appcelerator.js" append="no">
			<fileset file="${build.dir}/license_header.txt"/>
    		<fileset file="${stage.dir}/web/js/appcelerator-temp.js"/>
    	</concat>
		<delete file="${stage.dir}/web/js/appcelerator-temp.js"/>
		<echo message="minimized"/>
	</target>
	<target name="nojsmin" if="dont.jsmin">
		<concat destfile="${stage.dir}/web/js/appcelerator.js" append="no">
			<fileset file="${build.dir}/license_header.txt"/>
    		<fileset file="${stage.dir}/web/js/appcelerator-debug.js"/>
    	</concat>
		<echo message="didn't minimize"/>
	</target>
	<target name="copy_web_files">
		<copy todir="${stage.dir}/web" filtering="no">
			<fileset dir="${src.web.dir}" includes="**/*" excludes="**/js/**"/>
		</copy>
	</target>
	
	<target name="java_compile" depends="init" description="* Compiles the Java code">
		<mkdir dir="${stage.dir}/java/classes"/>
		<copy todir="${stage.dir}/src-java" filtering="true">
			<fileset dir="${src.java.dir}">
				<include name="**/*.java"/>
			</fileset>
			<filterchain>
				<expandproperties/>
			</filterchain>
		</copy>
		<javac debug="true" srcdir="${stage.dir}/src-java" destdir="${stage.dir}/java/classes" classpathref="classpath" excludes="**/myappcelerator/*"/>
		<jar destfile="${stage.dir}/java/appcelerator-${version.major}.${version.minor}.${version.rev}.jar">
			<fileset dir="${stage.dir}/java/classes">
				<include name="**/*"/>
			</fileset>
			<fileset dir="${src.java.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</jar>
	</target>
	
	<target name="test_compile" depends="java_compile">
		<path id="c">
			<path refid="classpath"/>
			<fileset dir="${stage.dir}/java/" includes="appcelerator-${version.major}.${version.minor}.${version.rev}.jar"/>
		</path>
		<taskdef name="appc" classname="org.appcelerator.compiler.ant.Compiler" classpathref="c" />
		<appc srcdir="${stage.dir}/web" destdir="test"/>
	</target>
	
	<target name="build_java" depends="build_core_javascript,copy_web_files,java_compile"/>
	<target name="build_server.nomin" depends="nomin,build_server"/>
	<target name="build_server" depends="build_java,build_doc" description="* Builds the Java Server">
		<mkdir dir="${stage.dir}/java/server/web"/>
		<copy todir="${stage.dir}/java/server/web">
			<fileset dir="${stage.dir}/web" includes="**/*"/>
		</copy>
		<copy todir="${stage.dir}/java/server/web" overwrite="true">
			<fileset dir="${build.java.dir}/server/web" includes="**/*"/>
			<fileset dir="${build.java.dir}/server" includes="appcelerator.xml"/>
		</copy>
		<mkdir dir="${stage.dir}/java/server/WEB-INF"/>
		<mkdir dir="${stage.dir}/java/server/WEB-INF/logs"/>
		<copy todir="${stage.dir}/java/server/WEB-INF">
			<fileset dir="${build.java.dir}/server/WEB-INF" includes="**/*" excludes="**/*web.xml"/>
		</copy>
		<war destfile="${stage.dir}/java/server/appcelerator.war" webxml="${build.java.dir}/server/WEB-INF/web.xml">
			<lib dir="${build.java.dir}/lib" includes="*.jar" excludes="servlet*.jar,js-*.jar,ant-*.jar"/>
			<lib dir="${stage.dir}/java" includes="appcelerator-${version.major}.${version.minor}.${version.rev}.jar"/>
			<fileset dir="${stage.dir}/java/server/web" includes="**/**"/>
			<fileset dir="${stage.dir}/java/server" includes="WEB-INF/**"/>
		</war>
	</target>
	<target name="server_dist.nomin" depends="nomin,server_dist"/>
	<target name="server_dist" depends="build_server" description="* Builds the Java SDK distribution">
		<zip destfile="${stage.dir}/appcelerator_server_${VERSION}.zip" comment="Appcelerator Platform SDK for Java">
			<zipfileset dir="stage/java/server" includes="appcelerator.war" prefix="appcelerator_server_${VERSION}/dist/server"/>
			<zipfileset dir="${build.java.dir}/server" includes="build.xml,README" prefix="appcelerator_server_${VERSION}"/>
			<zipfileset dir="stage" includes="doc/**" prefix="appcelerator_server_${VERSION}"/>
		</zip>
	</target>
	<target name="build_web_unit" depends="build_java" description="* Builds the web unit test suite">
		<mkdir dir="${stage.dir}/test/web"/>
		<copy todir="${stage.dir}/test/web">
			<fileset dir="${stage.dir}/web">
				<include name="**/*"/>
				<exclude name="*.html"/>
			</fileset>
			<fileset dir="${stage.dir}/web">
				<include name="blank.html"/>
			</fileset>
			<fileset dir="${src.test.web.dir}">
				<include name="**/*"/>
			</fileset>
		</copy>
		<war destfile="${stage.dir}/unittest.war" webxml="${build.java.dir}/unittest/WEB-INF/web.xml">
			<fileset dir="${stage.dir}/test/web" includes="**/**"/>
			<fileset dir="${build.java.dir}/unittest" includes="*.*"/>
		</war>
	</target>
	<target name="build_doc.nomin" depends="nomin,build_doc"/>
	<target name="build_doc" depends="build_java" description="* Builds the documentation">
		<mkdir dir="${stage.dir}/doc"/>
		<loadfile property="ruby_appcelerator.xml" srcFile="build/ruby/appcelerator.xml"/>
		<loadfile property="appcelerator.xml" srcFile="build/java/sdk/dist/src/web/appcelerator.xml"/>
		<loadfile property="appcelerator-services.xml" srcFile="build/examples/simple/appcelerator-services.xml"/>
		<loadfile property="ContactManager.java" srcFile="build/examples/simple/src/java/ContactManager.java"/>
		<loadfile property="contact_manager_service.php" srcFile="build/examples/simple/src/php/services/contact_manager_service.php"/>
		<loadfile property="contact_manager_service.rb" srcFile="build/examples/simple/src/ruby/services/contact_manager_service.rb"/>
		<loadfile property="index.html" srcFile="build/examples/simple/src/web/index.html"/>
		<copy todir="${stage.dir}/doc" filtering="true" overwrite="true">
			<fileset dir="${stage.dir}/web" includes="**/*" excludes="images/**"/>
			<filterset>
				<filter token="ruby_appcelerator.xml" value="${ruby_appcelerator.xml}"/>
				<filter token="appcelerator.xml" value="${appcelerator.xml}"/>
				<filter token="appcelerator-services.xml" value="${appcelerator-services.xml}"/>
				<filter token="ContactManager.java" value="${ContactManager.java}"/>
				<filter token="ContactManager.java" value="${ContactManager.java}"/>
				<filter token="VERSION" value="${VERSION}"/> 
				<filter token="contact_manager_service.php" value="${contact_manager_service.php}"/>
				<filter token="contact_manager_service.rb" value="${contact_manager_service.rb}"/>
				<filter token="index.html" value="${index.html}"/>
			</filterset>
		</copy>
        <copy todir="${stage.dir}/doc" filtering="true" overwrite="true">
            <fileset dir="${src.doc.dir}" includes="**/*" excludes="images/**"/>
            <filterset>
                <filter token="ruby_appcelerator.xml" value="${ruby_appcelerator.xml}"/>
                <filter token="appcelerator.xml" value="${appcelerator.xml}"/>
                <filter token="appcelerator-services.xml" value="${appcelerator-services.xml}"/>
                <filter token="ContactManager.java" value="${ContactManager.java}"/>
                <filter token="ContactManager.java" value="${ContactManager.java}"/>
                <filter token="VERSION" value="${VERSION}"/> 
                <filter token="contact_manager_service.php" value="${contact_manager_service.php}"/>
                <filter token="contact_manager_service.rb" value="${contact_manager_service.rb}"/>
				<filter token="index.html" value="${index.html}"/>
            </filterset>
        </copy>
		<copy todir="${stage.dir}/doc" filtering="false" overwrite="true">
			<fileset dir="${stage.dir}/web" includes="images/**"/>
			<fileset dir="${src.doc.dir}" includes="images/**"/>
		</copy>
        <mkdir dir="${stage.dir}/doc/WEB-INF/logs"/>
		<war destfile="${stage.dir}/doc.war" webxml="${build.java.dir}/server/WEB-INF/web.xml">
            <lib dir="${build.java.dir}/lib" includes="*.jar" excludes="servlet*.jar,js-*.jar,ant-*.jar"/>
            <lib dir="${stage.dir}/java" includes="appcelerator-${version.major}.${version.minor}.${version.rev}.jar"/>
			<fileset dir="${stage.dir}/doc" includes="**/**" />
			<fileset dir="${build.java.dir}/doc" includes="*.*"/>
            <fileset dir="${build.java.dir}/server" includes="WEB-INF/**"/>
		</war>
	</target>
	<target name="build_examples.nomin" depends="nomin,build_examples"/>
	<target name="build_examples" depends="build_java" description="* Builds the examples">
		<antcall target="build_example">
			<param name="example" value="blog"/>
		</antcall>
		<antcall target="build_example">
			<param name="example" value="forums"/>
		</antcall>
		<antcall target="build_example">
			<param name="example" value="simple"/>
		</antcall>
	</target>
	<target name="build_example">
		<delete dir="${stage.dir}/examples/${example}" failonerror="false"/>
		<mkdir dir="${stage.dir}/examples/${example}"/>
		<mkdir dir="${stage.dir}/examples/${example}/server"/>
		<mkdir dir="${stage.dir}/examples/${example}/lib"/>
		<mkdir dir="${stage.dir}/examples/${example}/lib/appcelerator"/>
		<copy todir="${stage.dir}/examples/${example}/src/web">
			<fileset dir="${stage.dir}/web" includes="**"/>
		</copy>
		<copy tofile="${stage.dir}/examples/${example}/server/setupfiles" file="${stage.dir}/java/server/appcelerator.war"/>
		<copy todir="${stage.dir}/examples" filtering="true" overwrite="true">
			<fileset dir="build/examples" includes="${example}/**"/>
		</copy>
		<copy todir="${stage.dir}/examples/${example}/lib/appcelerator" filtering="false"> 
			<fileset dir="${build.java.dir}/lib" includes="**/*"/>
			<fileset dir="${stage.dir}/java" includes="appcelerator-${VERSION}.jar"/>
		</copy>
		
		<!-- simulate creating a new project and then extracting -->
		
	</target>
	

	<target name="build_sdk" depends="init,build_web_unit,build_doc,build_java_sdk,build_php_sdk" description="* Builds all language SDKs"></target>
	
	<target name="build_java_sdk" depends="build_web_unit,build_doc,build_server,build_examples" description="* Builds the SDK for Java">
		<mkdir dir="${stage.dir}/sdk/java"/>
		<mkdir dir="${stage.dir}/sdk/java/dist/lib"/>
		<mkdir dir="${stage.dir}/sdk/java/dist/lib/appcelerator"/>
		<mkdir dir="${stage.dir}/sdk/java/dist/server"/>
		<mkdir dir="${stage.dir}/sdk/java/doc"/>
		<mkdir dir="${stage.dir}/sdk/java/test"/>
		<copy todir="${stage.dir}/sdk/java" filtering="true"> 
			<fileset dir="${build.java.dir}/sdk" includes="README,*.*,dist/*.*,dist/src/java/**"/>
			<fileset dir="." includes="LICENSE"/>
		</copy>
		<copy todir="${stage.dir}/sdk/java/dist/lib/appcelerator" filtering="false"> 
			<fileset dir="${build.java.dir}/lib" includes="**/*"/>
			<fileset dir="${stage.dir}/java" includes="appcelerator-${VERSION}.jar"/>
		</copy>
		<copy todir="${stage.dir}/sdk/java/dist/src/web" filtering="false"> 
			<fileset dir="${stage.dir}/web" includes="**/*"/>
		</copy>
		<copy todir="${stage.dir}/sdk/java/dist" filtering="false" overwrite="true"> 
			<fileset dir="${build.java.dir}/sdk/dist" includes="**" excludes=".classpath"/>
		</copy>
		<copy todir="${stage.dir}/sdk/java/dist" filtering="false" overwrite="true"> 
			<fileset dir="stage" includes="examples/**"/>
		</copy>
		<copy todir="${stage.dir}/sdk/java/dist" filtering="true"> 
			<fileset dir="${build.java.dir}/sdk/dist" includes=".classpath"/>
			<filterchain>
				<expandproperties/>
			</filterchain>
		</copy>
		<copy tofile="${stage.dir}/sdk/java/dist/server/setupfiles" file="${stage.dir}/java/server/appcelerator.war"/>
		<copy todir="${stage.dir}/sdk/java/doc" filtering="false"> 
			<fileset dir="${stage.dir}/doc" includes="**/*"/>
		</copy>
		<copy todir="${stage.dir}/sdk/java/test" filtering="false"> 
			<fileset dir="${stage.dir}/test/web" includes="**/*"/>
		</copy>
	</target>
	<target name="build_php_sdk" depends="build_web_unit,build_doc,build_examples" description="* Builds the SDK for PHP">
		<mkdir dir="${stage.dir}/sdk/php"/>
		<mkdir dir="${stage.dir}/sdk/php/doc"/>
		<mkdir dir="${stage.dir}/sdk/php/test"/>
		<copy todir="${stage.dir}/sdk/php" filtering="true"> 
			<fileset dir="${build.php.dir}/sdk" includes="README,*.*"/>
			<fileset dir="." includes="LICENSE"/>
		</copy>
		<copy todir="${stage.dir}/sdk/php/src/web" filtering="false"> 
			<fileset dir="${stage.dir}/web" includes="**/*"/>
		</copy>
		<copy todir="${stage.dir}/sdk/php/src/php" filtering="false"> 
			<fileset dir="${src.php.dir}" includes="**/*"/>
		</copy>
		<copy todir="${stage.dir}/sdk/php" filtering="false" overwrite="true"> 
			<fileset dir="${build.php.dir}/sdk/dist" includes="**"/>
		</copy>
		<copy todir="${stage.dir}/sdk/php/doc" filtering="false"> 
			<fileset dir="${stage.dir}/doc" includes="**/*"/>
		</copy>
		<copy todir="${stage.dir}/sdk/php/examples" filtering="false"> 
			<fileset dir="${stage.dir}/examples">
				<include name="**/*"/>
				<exclude name="**/setupfiles" />
				<exclude name="**/*.jar" />
			</fileset>	
		</copy>
		<copy todir="${stage.dir}/sdk/php/test" filtering="false"> 
			<fileset dir="${stage.dir}/test/web" includes="**/*"/>
		</copy>
		<copy todir="${stage.dir}/sdk/php" filtering="false"> 
			<fileset dir="build" includes="examples/**" excludes="examples/**/lib" />
		</copy>
	</target>
	
	<target name="sdk_java_dist" depends="build_sdk" description="* Builds the Java SDK distribution">
		<mkdir dir="stage"/>
		<zip destfile="${stage.dir}/appcelerator_sdk_java_${VERSION}.zip" comment="Appcelerator Platform SDK for Java">
			<zipfileset dir="stage/sdk/java" prefix="appcelerator_sdk_java_${VERSION}">
				<include name="**/*"/>
				<exclude name="stage/**"/>
				<exclude name="output/**"/>
				<exclude name=".server.id"/>
			</zipfileset>
		</zip>
	</target>
	
	<target name="sdk_php_dist" depends="build_sdk" description="* Builds the PHP SDK distribution">
		<mkdir dir="stage"/>
		<zip destfile="${stage.dir}/appcelerator_sdk_php_${VERSION}.zip" comment="Appcelerator Platform SDK for PHP">
			<zipfileset dir="stage/sdk/php" prefix="appcelerator_sdk_php_${VERSION}">
				<include name="**/*"/>
				<exclude name="stage/**"/>
				<exclude name="output/**"/>
				<exclude name=".server.id"/>
			</zipfileset>
		</zip>
	</target>
	
	<target name="examples_dist" depends="build_examples" description="* Builds the examples distribution">
		<mkdir dir="stage"/>
		<zip destfile="${stage.dir}/appcelerator_examples_${VERSION}.zip" comment="Appcelerator Examples">
			<zipfileset dir="stage/examples" includes="**/*" prefix="appcelerator_examples_${VERSION}"/>
		</zip>
	</target>

	<target name="sdk_ruby_dist" depends="build_core_javascript,build_examples" description="* Builds the Ruby on Rails SDK distribution">
		<mkdir dir="${stage.dir}/ruby"/>
        <property name="ruby_gem_version" value="${APP_VERSION}"/>
        <copy todir="${stage.dir}/ruby" filtering="true">
            <fileset dir="${src.ruby.dir}/gem" includes="**/*"/>
            <fileset dir="${build.ruby.dir}" includes="**/*"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${stage.dir}/ruby">
			<fileset dir="stage" includes="examples/**"/>
		</copy>
        <copy todir="${stage.dir}/ruby/appcelerator/templates" filtering="false">
             <fileset dir="${stage.dir}/web" includes="js/appcelerator.js"/>
             <fileset dir="${src.web.dir}" includes="modules**/**"/>
             <fileset dir="${src.web.dir}" includes="css/**,images/**,index.html"/>
        	 <fileset dir="${build.ruby.dir}" includes="appcelerator.xml,dist/README"/>
             <fileset dir="${build.ruby.dir}/dist/src/web" includes="**/**"/>
        </copy>
		<antcall target="gem"/>
	</target>
	<target name="gem" depends="init">
		<exec dir="${stage.dir}/ruby" executable="rake">
			<arg line="version=${APP_VERSION}"/>
		</exec>
		<copy todir="${stage.dir}">
			<fileset dir="${stage.dir}/ruby/pkg" includes="*.gem"/>
		</copy>
	</target>
	<target name="sdk_dotnet_dist" depends="build_sdk" description="* Builds the .NET SDK distribution">
		<mkdir dir="stage"/>
		<zip destfile="${stage.dir}/appcelerator_sdk_dotnet_${VERSION}.zip" comment="Appcelerator Platform SDK for .NET" prefix="appcelerator_sdk_dotnet_${VERSION}">
			<zipfileset dir="stage/sdk/dotnet">
				<include name="**/*"/>
				<exclude name="stage/**"/>
				<exclude name="output/**"/>
				<exclude name=".server.id"/>
			</zipfileset>
		</zip>
	</target>
	<target name="sdk_all_dist" depends="sdk_ruby_dist,sdk_java_dist,sdk_php_dist,examples_dist" description="* Builds the distributions for all the platforms"/>
	<target name="install_all" depends="install_java,install_ruby,install_php"/>
	<target name="install_all_examples" depends="install_java_examples,install_ruby_examples,install_php_examples"/>
	<target name="install_java" depends="sdk_java_dist">
		<delete dir="${stage.dir}/appcelerator_sdk_java_${VERSION}" failonerror="false"/>
		<unzip src="${stage.dir}/appcelerator_sdk_java_${VERSION}.zip" dest="${stage.dir}"/>

		<delete dir="${basedir}/${stage.dir}/sdkprojects/myjavaapp" failonerror="false"/>
		<ant dir="${stage.dir}/appcelerator_sdk_java_${VERSION}" target="create.silent">
			<property name="app.name" value="myapp"/>
			<property name="create.dir" value="${basedir}/${stage.dir}/sdkprojects/myjavaapp"/>
		</ant>
		<ant dir="${basedir}/${stage.dir}/sdkprojects/myjavaapp" target="dist"/>
		<ant dir="${basedir}/${stage.dir}/sdkprojects/myjavaapp" target="undeploy"/>
		<ant dir="${basedir}/${stage.dir}/sdkprojects/myjavaapp" target="deploy"/>
	</target>
	<target name="install_forums" depends="init,install_java_sdk">
		<antcall target="install_java_example">
			<param name="example" value="forums"/>
			<param name="plat.excludes" value="doc/**,examples/**,src/web/modules/**,test/**"/>
		</antcall>
	</target>
	<target name="install_java_sdk">
		<available file="${stage.dir}/appcelerator_sdk_java_${VERSION}" type="dir" property="sdk.java.exists"/>
		<antcall target="do.sdk"/>
	</target>
	<target name="do.sdk" unless="sdk.java.exists">
		<antcall target="sdk_java_dist"/>
		<delete dir="${stage.dir}/appcelerator_sdk_java_${VERSION}" failonerror="false"/>
		<unzip src="${stage.dir}/appcelerator_sdk_java_${VERSION}.zip" dest="${stage.dir}"/>
	</target>
	<target name="install_java_examples" depends="sdk_java_dist">
		<delete dir="${stage.dir}/appcelerator_sdk_java_${VERSION}" failonerror="false"/>
		<unzip src="${stage.dir}/appcelerator_sdk_java_${VERSION}.zip" dest="${stage.dir}"/>

		<antcall target="install_java_example">
			<param name="example" value="forums"/>
		</antcall>
		<antcall target="install_java_example">
			<param name="example" value="simple"/>
		</antcall>
	</target>
	<target name="install_java_example">
		<delete dir="${basedir}/${stage.dir}/exampleprojects/${example}_java" failonerror="false"/>
		<ant dir="${stage.dir}/appcelerator_sdk_java_${VERSION}" target="create.silent">
			<property name="app.name" value="${example}"/>
			<property name="create.dir" value="${basedir}/${stage.dir}/exampleprojects/${example}_java"/>
		</ant>
		<copy todir="${basedir}/${stage.dir}/exampleprojects/${example}_java" overwrite="true">
			<fileset dir="build/examples/${example}" includes="**"/>
		</copy>
		<ant dir="${basedir}/${stage.dir}/exampleprojects/${example}_java" target="dist"/>
		<ant dir="${basedir}/${stage.dir}/exampleprojects/${example}_java" target="undeploy"/>
		<ant dir="${basedir}/${stage.dir}/exampleprojects/${example}_java" target="deploy"/>
	</target>
	<target name="install_ruby" depends="sdk_ruby_dist">
		<delete dir="${stage.dir}/appcelerator_sdk_ruby_${VERSION}" failonerror="false"/>
		<exec dir="${stage.dir}" executable="gem" failonerror="false">
			<arg line="uninstall appcelerator"/>
		</exec>
		<exec dir="${stage.dir}" executable="gem" failonerror="false">
			<arg line="install -l appcelerator-${VERSION}.gem"/>
		</exec>
		<mkdir dir="${stage.dir}/sdkprojects"/>
		<exec dir="${stage.dir}/sdkprojects" executable="appcelerator" failonerror="false">
			<arg line="myrubyapp"/>
		</exec>
	</target>
	<target name="install_ruby_examples" depends="sdk_ruby_dist">
		<delete dir="${stage.dir}/appcelerator_sdk_java_${VERSION}" failonerror="false"/>
		<exec dir="${stage.dir}" executable="gem" failonerror="false">
			<arg line="uninstall appcelerator"/>
		</exec>
		<exec dir="${stage.dir}" executable="gem" failonerror="false">
			<arg line="install -l appcelerator-${VERSION}.gem"/>
		</exec>
		<!--
		<antcall target="install_ruby_example">
			<param name="example" value="forums"/>
		</antcall>
		-->
		<antcall target="install_ruby_example">
			<param name="example" value="simple"/>
		</antcall>
	</target>
	<target name="install_ruby_example">
		<delete dir="${basedir}/${stage.dir}/exampleprojects/${example}_ruby" failonerror="false"/>
		<mkdir dir="${basedir}/${stage.dir}/exampleprojects"/>
		<exec dir="${basedir}/${stage.dir}/exampleprojects" executable="appcelerator" failonerror="false">
			<arg line="${example}_ruby"/>
		</exec>
		<copy todir="${basedir}/${stage.dir}/exampleprojects/${example}_ruby/app">
			<fileset dir="build/examples/${example}/src/ruby" includes="**/**"/>
		</copy>
		<copy todir="${basedir}/${stage.dir}/exampleprojects/${example}_ruby/public" overwrite="true">
			<fileset dir="build/examples/${example}/src/web" includes="**/**"/>
		</copy>
	</target>
	<target name="install_php" depends="sdk_php_dist">
		<delete dir="${stage.dir}/sdkprojects/myphpapp" failonerror="false"/>
		<unzip src="${stage.dir}/appcelerator_sdk_php_${VERSION}.zip" dest="${stage.dir}/sdkprojects/myphpapp"/>
		<property name="php.project.dir" value="${stage.dir}/sdkprojects/myphpapp/appcelerator_sdk_php_${VERSION}"/>
		<antcall target="undeploy_php"/>
		<antcall target="deploy_php"/>
	</target>
	<target name="install_php_examples" depends="sdk_php_dist">
		<antcall target="install_php_example">
			<param name="example" value="simple"/>
		</antcall>
	</target>
	<target name="install_php_example">
		<delete dir="${stage.dir}/exampleprojects/${example}_php" failonerror="false"/>
		<unzip src="${stage.dir}/appcelerator_sdk_php_${VERSION}.zip" dest="${stage.dir}/exampleprojects/${example}_php"/>
		<copy todir="${stage.dir}/exampleprojects/${example}_php/appcelerator_sdk_php_${VERSION}/src/php" overwrite="true">
			<fileset dir="build/examples/${example}/src/php" includes="**"/>
		</copy>
		<copy todir="${stage.dir}/exampleprojects/${example}_php/appcelerator_sdk_php_${VERSION}/src/web" overwrite="true">
			<fileset dir="build/examples/${example}/src/web" includes="**"/>
		</copy>
		<antcall target="undeploy_php">
			<param name="php.project.dir" value="${stage.dir}/exampleprojects/${example}_php/appcelerator_sdk_php_${VERSION}"/>
		</antcall>
		<antcall target="deploy_php">
			<param name="php.project.dir" value="${stage.dir}/exampleprojects/${example}_php/appcelerator_sdk_php_${VERSION}"/>
		</antcall>
		<antcall target="deploy_php"/>
	</target>
	<target name="nightly_dist" description="* Builds the nightlighty source distribution">
		<tstamp>
			<format property="TODAY" pattern="MMddyyyy"/>
		</tstamp>
		<echo>Building the Appcelerator Platform SDK source code nightly distribution</echo>
		<mkdir dir="stage"/>
		<zip destfile="${stage.dir}/appcelerator_sdk_source_${TODAY}.zip" comment="Appcelerator Platform SDK sourcecode for ${TODAY}">
			<zipfileset dir="." prefix="appcelerator_sdk_source_${TODAY}">
				<include name="**/*"/>
				<exclude name="stage/**"/>
				<exclude name="output/**"/>
				<exclude name=".server.id"/>
			</zipfileset>
		</zip>
	</target>
    <target name="build_src_dist" description="* Builds the source distribution">
        <echo>Building the Appcelerator Platform SDK source code distribution</echo>
        <mkdir dir="stage"/>
        <zip destfile="${stage.dir}/appcelerator_sdk_source_${VERSION}.zip" comment="Appcelerator Platform SDK sourcecode for ${VERSION}">
            <zipfileset dir="." prefix="appcelerator_sdk_source_${VERSION}">
                <include name="**/*"/>
                <exclude name="stage/**"/>
                <exclude name="output/**"/>
                <exclude name=".server.id"/>
            </zipfileset>
        </zip>
    </target>
	<target name="gendoc_widget">
		<input message="what is the title (ex: Tree View)?" addproperty="title"/>
		<input message="what is the name (ex: treeview)?" addproperty="name"/>
		<input message="what is the tree parent name (ex: overview,started,framework,forms,charts,visual,nonvisual,services)?" addproperty="parent"/>
		<copy file="${src.doc.dir}/gendoc-templates/widget.html" tofile="${src.doc.dir}/${name}.html" overwrite="true">
			<filterchain>
			    <replacetokens>
			      <token key="widget.title" value="${title}"/>
			      <token key="widget.name" value="${name}"/>
			    </replacetokens>
			  </filterchain>
		</copy>
		<antcall target="gendoc_treechild"/>
	</target>
	<target name="gendoc_treechild">
		<copy file="${src.doc.dir}/gendoc-templates/treechild.html" tofile="${src.doc.dir}/treechild/${name}.html" overwrite="true">
			<filterchain>
			    <replacetokens>
			      <token key="title" value="${title}"/>
			      <token key="name" value="${name}"/>
			      <token key="parent" value="${parent}"/>
			    </replacetokens>
			  </filterchain>
		</copy>
		<loadfile property="treechild" srcFile="${src.doc.dir}/treechild/${name}.html"/>
		<echo>you may want to past the following into index.html
${treechild}
cat ${src.doc.dir}/treechild/${name}.html</echo>
	</target>
	<target name="promptnametitle">
		<input message="what is the title (ex: .NET)?" addproperty="title"/>
		<input message="what is the name (ex: dotnet)?" addproperty="name"/>
		<input message="what is the tree parent name (ex: overview,started,framework,forms,charts,visual,nonvisual,services)?" addproperty="parent"/>
	</target>
	<target name="gendoc_lang" depends="promptnametitle,gendoc_service,gendoc_gettingstarted,gendoc_treechild"/>
	<target name="gendoc_service" depends="promptnametitle">
		<copy file="${src.doc.dir}/gendoc-templates/service.html" tofile="${src.doc.dir}/${name}service.html" overwrite="true">
			<filterchain>
			    <replacetokens>
			      <token key="title" value="${title}"/>
			      <token key="name" value="${name}service"/>
			    </replacetokens>
			  </filterchain>
		</copy>
	</target>
	<target name="gendoc_gettingstarted" depends="promptnametitle">
		<copy file="${src.doc.dir}/gendoc-templates/gettingstarted.html" tofile="${src.doc.dir}/${name}gettingstarted.html" overwrite="true">
			<filterchain>
			    <replacetokens>
			      <token key="title" value="${title}"/>
			      <token key="name" value="${name}gettingstarted"/>
			    </replacetokens>
			  </filterchain>
		</copy>
	</target>
	<target name="build_spring_jar" depends="java_compile">
		<mkdir dir="${stage.dir}/appcelerator-spring"/>
		<mkdir dir="${stage.dir}/appcelerator-spring/META-INF"/>
		<copy todir="${stage.dir}/appcelerator-spring/META-INF">
			<fileset dir="src/java/org/appcelerator/spring/handler" includes="spring.handlers,spring.schemas"/>
		</copy>
		<jar destfile="${stage.dir}/appcelerator-spring.jar">
			<fileset dir="${stage.dir}/appcelerator-spring"/>
			<fileset dir="${stage.dir}/java" includes="classes/**"/>
		</jar>
	</target>
	<target name="undeploy_doc">
		<available file="${deploy.dir}/doc" type="dir" property="doc.deploy.dir.exists"/>
		<available file="${deploy.dir}/doc.war" type="file" property="doc.deploy.war.exists"/>
		<antcall target="undeploy.war.doc"/>
		<antcall target="undeploy.dir.doc"/>
	</target>
	<target name="undeploy.dir.doc" if="doc.deploy.dir.exists">
		<delete dir="${deploy.dir}/doc"/>
	</target>
	<target name="undeploy.war.doc" if="doc.deploy.war.exists">
		<delete file="${deploy.dir}/doc.war"/>
	</target>
	<target name="undeploy_web_unit">
		<available file="${deploy.dir}/unittest" type="dir" property="unittest.deploy.dir.exists"/>
		<available file="${deploy.dir}/unittest.war" type="file" property="unittest.deploy.war.exists"/>
		<antcall target="undeploy.war.unittest"/>
		<antcall target="undeploy.dir.unittest"/>
	</target>
	<target name="undeploy.dir.unittest" if="unittest.deploy.dir.exists">
		<delete dir="${deploy.dir}/unittest"/>
	</target>
	<target name="undeploy.war.unittest" if="unittest.deploy.war.exists">
		<delete file="${deploy.dir}/unittest.war"/>
	</target>

	<target name="deploy_doc" description="* deploys the doc as a war to ${deploy.dir}">
		<available file="${deploy.dir}" type="dir" property="deploy.dir.exists" />
		<fail unless="deploy.dir.exists">Directory ${deploy.dir} doesn't exist.</fail>
		<copy todir="${deploy.dir}">
			<fileset dir="stage" includes="doc.war" />
		</copy>
	</target>
	<target name="deploy_web_unit" description="* deploys the unittest as a war to ${deploy.dir}">
		<available file="${deploy.dir}" type="dir" property="deploy.dir.exists" />
		<fail unless="deploy.dir.exists">Directory ${deploy.dir} doesn't exist.</fail>
		<copy todir="${deploy.dir}">
			<fileset dir="stage" includes="unittest.war" />
		</copy>
	</target>
	<target name="deploy_php" description="deploys php src and web files to ${php.deploy.dir}">
		<property name="php.project.dir" value="stage/sdk/php"/>
		<available file="${php.deploy.dir}" type="dir" property="php.deploy.dir.exists" />
		<fail unless="php.deploy.dir.exists">Directory ${php.deploy.dir} doesn't exist.</fail>
		<echo>using src dir of ${php.project.dir}</echo>
		<copy todir="${php.deploy.dir}">
			<fileset dir="${php.project.dir}/src/web" includes="**/**,*.*" />
			<fileset dir="${php.project.dir}/src/php" includes="**/**,*.*" />
		</copy>
	</target>
	<target name="undeploy_php">
		<available file="${php.deploy.dir}" type="dir" property="php.deploy.dir.exists"/>
		<antcall target="undeploy.dir.php"/>
	</target>
	<target name="undeploy.dir.php" if="php.deploy.dir.exists">
		<delete>
			<fileset dir="${php.deploy.dir}" includes="**/**"/>
		</delete>
	</target>
	<target name="publish_doc" depends="build_doc,undeploy_doc,deploy_doc"/>
	<target name="publish_web_unit" depends="build_web_unit,undeploy_web_unit,deploy_web_unit"/>
	<target name="publish_all" depends="publish_doc,publish_web_unit"/>
	<target name="publish_web_unit_scp" depends="build_web_unit,undeploy_web_unit_ssh,deploy_web_unit_scp"/>
	<target name="publish_doc_scp" depends="build_doc,undeploy_doc_ssh,deploy_doc_scp"/>
	<target name="publish_all_scp" depends="publish_doc_scp,publish_web_unit_scp"/>
	
	<target name="publish_dist" depends="sdk_all_dist,build_src_dist" description="* Deploy distributions to distribution server">
        <fail message="must define scp.dist.dir" unless="scp.dist.dir"/>
        <fail message="must define scp.dist.host" unless="scp.dist.host"/>
        <fail message="must define scp.dist.user" unless="scp.dist.user"/>
        <fail message="must define scp.dist.pwd" unless="scp.dist.pwd"/>
		
        <scp todir="${scp.dist.user}@${scp.dist.host}:/tmp" trust="true" password="${scp.dist.pwd}" verbose="true">
            <fileset dir="${stage.dir}" includes="appcelerator_sdk_source_${VERSION}.zip"/>
        </scp>
        <scp todir="${scp.dist.user}@${scp.dist.host}:/tmp" trust="true" password="${scp.dist.pwd}" verbose="true">
            <fileset dir="${stage.dir}" includes="appcelerator_sdk_java_${VERSION}.zip"/>
        </scp>
        <scp todir="${scp.dist.user}@${scp.dist.host}:/tmp" trust="true" password="${scp.dist.pwd}" verbose="true">
            <fileset dir="${stage.dir}" includes="appcelerator_sdk_php_${VERSION}.zip"/>
        </scp>
        <scp todir="${scp.dist.user}@${scp.dist.host}:/tmp" trust="true" password="${scp.dist.pwd}" verbose="true">
            <fileset dir="${stage.dir}" includes="appcelerator-${VERSION}.gem"/>
        </scp>
		
        <!--
        <scp todir="${scp.dist.user}@${scp.dist.host}:/tmp" trust="true" password="${scp.dist.pwd}" verbose="true">
            <fileset dir="${stage.dir}" includes="appcelerator_sdk_dotnet_${VERSION}.zip"/>
        </scp> 
        -->

		<sshexec host="${scp.dist.host}" username="${scp.dist.user}" password="${scp.dist.pwd}" trust="true"
            command="echo ${scp.dist.pwd} | sudo -S mkdir -p ${scp.dist.dir}/sdk_java/${VERSION} &amp;&amp; echo ${scp.dist.pwd} | sudo -S mv /tmp/appcelerator_sdk_java_${VERSION}.zip ${scp.dist.dir}/sdk_java/${VERSION}"/>
		
        <sshexec host="${scp.dist.host}" username="${scp.dist.user}" password="${scp.dist.pwd}" trust="true"
            command="echo ${scp.dist.pwd} | sudo -S mkdir -p ${scp.dist.dir}/sdk_php/${VERSION} &amp;&amp; echo ${scp.dist.pwd} | sudo -S mv /tmp/appcelerator_sdk_php_${VERSION}.zip ${scp.dist.dir}/sdk_php/${VERSION}"/>

        <sshexec host="${scp.dist.host}" username="${scp.dist.user}" password="${scp.dist.pwd}" trust="true"
            command="echo ${scp.dist.pwd} | sudo -S mkdir -p ${scp.dist.dir}/sdk_ruby/${VERSION} &amp;&amp; echo ${scp.dist.pwd} | sudo -S mv /tmp/appcelerator-${VERSION}.gem ${scp.dist.dir}/sdk_ruby/${VERSION}"/>

        <sshexec host="${scp.dist.host}" username="${scp.dist.user}" password="${scp.dist.pwd}" trust="true"
            command="echo ${scp.dist.pwd} | sudo -S mkdir -p ${scp.dist.dir}/sdk_src/${VERSION} &amp;&amp; echo ${scp.dist.pwd} | sudo -S mv /tmp/appcelerator_sdk_source_${VERSION}.zip ${scp.dist.dir}/sdk_src/${VERSION}" />
		
        <!--
        <sshexec host="${scp.dist.host}" username="${scp.dist.user}" password="${scp.dist.pwd}" trust="true"
            command="echo ${scp.dist.pwd} | sudo -S mkdir -p ${scp.dist.dir}/sdk_dotnet/${VERSION} &amp;&amp; echo ${scp.dist.pwd} | sudo -S mv /tmp/appcelerator_sdk_dotnet_${VERSION}.zip ${scp.dist.dir}/sdk_dotnet/${VERSION}"/>
        --> 
        
	</target>
	
	<target name="deploy_doc_scp">
		<antcall target="-deploy_scp">
			<param name="dir" value="stage"/>
			<param name="file" value="doc.war"/>
		</antcall>
	</target>
	<target name="deploy_web_unit_scp">
		<antcall target="-deploy_scp">
			<param name="dir" value="stage"/>
			<param name="file" value="unittest.war"/>
		</antcall>
	</target>
	<target name="undeploy_doc_ssh">
		<antcall target="-undeploy_ssh">
			<param name="file" value="doc.war"/>
			<param name="dir" value="doc"/>
		</antcall>
	</target>
	<target name="undeploy_web_unit_ssh">
		<antcall target="-undeploy_ssh">
			<param name="file" value="unittest.war"/>
			<param name="dir" value="unittest"/>
		</antcall>
	</target>
	<target name="-undeploy_ssh" depends="get_jsch">
		<fail message="must define scp.dir" unless="scp.dir"/>
		<fail message="must define scp.host" unless="scp.host"/>
		<fail message="must define scp.user" unless="scp.user"/>
		<fail message="must define scp.pwd" unless="scp.pwd"/>
		<sshexec host="${scp.host}" username="${scp.user}" password="${scp.pwd}" trust="true"
			command="echo ${scp.pwd} | sudo -S rm -rf ${scp.dir}/${dir}/*;rm -rf ${scp.dir}/${file}"/>
	</target>
	<target name="get_jsch">
		<available file="${ant.home}/lib/jsch-0.1.35.jar" type="file" property="jsch.exists" />
		<antcall target="-get_jsch"/>
	</target>
	<target name="-get_jsch" unless="jsch.exists">
		<get src="http://superb-east.dl.sourceforge.net/sourceforge/jsch/jsch-0.1.35.jar" dest="${ant.home}/lib/jsch-0.1.35.jar"/>
	</target>
	<target name="echoproperties">
		<echoproperties/>
	</target>
	<target name="-deploy_scp" depends="get_jsch">
		<fail message="must define scp.dir" unless="scp.dir"/>
		<fail message="must define scp.host" unless="scp.host"/>
		<fail message="must define scp.user" unless="scp.user"/>
		<fail message="must define scp.pwd" unless="scp.pwd"/>
        <scp todir="${scp.user}@${scp.host}:/tmp" trust="true" password="${scp.pwd}" verbose="true">
            <fileset dir="${dir}" includes="${file}"/>
        </scp>
        <sshexec host="${scp.host}" username="${scp.user}" password="${scp.pwd}" trust="true"
            command="echo ${scp.pwd} | sudo -S mv /tmp/${file} ${scp.dir}"/>
	</target>
</project>
