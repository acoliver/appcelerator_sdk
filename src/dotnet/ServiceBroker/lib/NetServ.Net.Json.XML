<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NetServ.Net.Json</name>
    </assembly>
    <members>
        <member name="T:NetServ.Net.Json.JsonBoolean">
            <summary>
            Represents a JavaScript Object Notation Boolean data type. This class 
            cannot be inherited.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonTypeSkeleton">
            <summary>
            Defines a base class for most Json types. This class is abstract.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.IJsonType">
            <summary>
            Defines a JavaScript Object Notation data type.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.IJsonType.Write(NetServ.Net.Json.IJsonWriter)">
            <summary>
            Writes the contents of the Json type using the specified
            <see cref="T:NetServ.Net.Json.IJsonWriter"/>.
            </summary>
            <param name="writer">The Json writer.</param>
        </member>
        <member name="P:NetServ.Net.Json.IJsonType.JsonTypeCode">
            <summary>
            Gets the <see cref="T:NetServ.Net.Json.JsonTypeCode"/> of the type.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonTypeSkeleton.#ctor(NetServ.Net.Json.JsonTypeCode)">
            <summary>
            Initialises a new instance of the JsonTypeSkeleton class and specifies the 
            type code.
            </summary>
            <param name="typeCode">The type code.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonTypeSkeleton.Write(NetServ.Net.Json.IJsonWriter)">
            <summary>
            When overriden in a derived class; writes the contents of the Json type 
            to the specified <see cref="T:NetServ.Net.Json.IJsonWriter"/>.
            </summary>
            <param name="writer">The Json writer.</param>
        </member>
        <member name="P:NetServ.Net.Json.JsonTypeSkeleton.JsonTypeCode">
            <summary>
            Gets the type code of this Json type.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.IJsonBoolean">
            <summary>
            Defines a JavaScipt Object Notation Boolean data type.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.IJsonBoolean.Value">
            <summary>
            Gets the value of the Json boolean.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonBoolean.TrueString">
            <summary>
            Defines the Json true string. This field is constant.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonBoolean.FalseString">
            <summary>
            Defines the Json false string. This field is constant.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonBoolean.True">
            <summary>
            Defines a true JsonBoolean instance. This field is readonly.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonBoolean.False">
            <summary>
            Defines a false JsonBoolean instance. This field is readonly.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.Write(NetServ.Net.Json.IJsonWriter)">
            <summary>
            Writes the contents of this Json type using the specified
            <see cref="T:NetServ.Net.Json.IJsonWriter"/>.
            </summary>
            <param name="writer">The Json writer.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this JsonBoolean instance.
            </summary>
            <returns> <see cref="T:System.String"/> representation of this JsonBoolean instance</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.Equals(System.Object)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the specified object is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.Equals(NetServ.Net.Json.JsonBoolean)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            JsonBoolean.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified instance is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.Equals(NetServ.Net.Json.IJsonBoolean)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:NetServ.Net.Json.IJsonBoolean"/>.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified instance is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.Equals(System.Boolean)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:System.Boolean"/>.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified bool is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.Get(System.Boolean)">
            <summary>
            Returns a static JsonBoolean instance representing <paramref name="value"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>A static JsonBoolean instance representing <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.Equals(NetServ.Net.Json.JsonBoolean,NetServ.Net.Json.JsonBoolean)">
            <summary>
            Determines if the two <see cref="T:NetServ.Net.Json.JsonBoolean"/>s are
            equal.
            </summary>
            <param name="a">The first JsonBoolean.</param>
            <param name="b">The second JsonBoolean.</param>
            <returns>True if the JsonBooleans are equal, otherwise; false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.op_Equality(NetServ.Net.Json.JsonBoolean,NetServ.Net.Json.JsonBoolean)">
            <summary>
            Equality operator.
            </summary>
            <param name="a">The first JsonBoolean.</param>
            <param name="b">The second JsonBoolean.</param>
            <returns>True if the JsonBooleans are equal, otherwise; false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.op_Inequality(NetServ.Net.Json.JsonBoolean,NetServ.Net.Json.JsonBoolean)">
            <summary>
            Inequality operator.
            </summary>
            <param name="a">The first JsonBoolean.</param>
            <param name="b">The second JsonBoolean.</param>
            <returns>True if the JsonBooleans are not equal, otherwise; false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.op_Implicit(System.Boolean)~NetServ.Net.Json.JsonBoolean">
            <summary>
            Implicit <see cref="T:System.Boolean"/> conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.op_Implicit(NetServ.Net.Json.JsonNull)~NetServ.Net.Json.JsonBoolean">
            <summary>
            Implicit <see cref="T:NetServ.Net.Json.JsonNull"/> conversion operator.
            </summary>
            <param name="value"></param>
            <returns>This method always returns null.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.op_Explicit(NetServ.Net.Json.JsonBoolean)~System.Boolean">
            <summary>
            Explicit <see cref="T:NetServ.Net.Json.JsonBoolean"/> conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonBoolean.#ctor(System.Boolean)">
            <summary>
            Initialises a new instance of the JsonBoolean class and specifies the 
            value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:NetServ.Net.Json.JsonBoolean.Value">
            <summary>
            Gets the value of this JsonBoolean.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonWriter">
            <summary>
            Provided support for writing JavaScript Object Notation data types to an
            underlying <see cref="T:System.IO.TextWriter"/>.
            </summary>    
        </member>
        <member name="T:NetServ.Net.Json.Disposable">
            <summary>
            Defines a base for a class which implements the Disposable pattern. This class
            is abstract.
            </summary>    
        </member>
        <member name="M:NetServ.Net.Json.Disposable.Dispose(System.Boolean)">
            <summary>
            Disposes of this instance.
            </summary>
            <param name="disposing">True if being called explicitly, otherwise; false
            to indicate being called implicitly by the GC.</param>
        </member>
        <member name="M:NetServ.Net.Json.Disposable.CheckDisposed">
            <summary>
            Helper method to throw a <see cref="T:System.ObjectDisposedException"/>
            if this instance has been disposed of.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.Disposable.IsDisposed">
            <summary>
            Gets a value indicating if this instance has been disposed of.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.IJsonWriter">
            <summary>
            Defines a JavaScript Object Notation writer.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.IJsonWriter.WriteBeginArray">
            <summary>
            Writes the start of an array to the underlying data stream.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.IJsonWriter.WriteEndArray">
            <summary>
            Writes the end of an array to the underlying data stream.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.IJsonWriter.WriteBeginObject">
            <summary>
            Writes the start of an object to the underlying data stream.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.IJsonWriter.WriteEndObject">
            <summary>
            Writes the end of an object to the underlying data stream.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.IJsonWriter.WriteName(System.String)">
            <summary>
            Writes a object property name to the underlying data stream.
            </summary>
            <param name="value">The property name.</param>
        </member>
        <member name="M:NetServ.Net.Json.IJsonWriter.WriteValue(System.String)">
            <summary>
            Writes a raw string value to the underlying data stream.
            </summary>
            <param name="value">The string to write.</param>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.BeginArray">
            <summary>
            Defines the start of an array. This field is constant.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.EndArray">
            <summary>
            Defines the end of an array. This field is constant.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.BeginObject">
            <summary>
            Defines the start of an object. This field is constant.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.EndObject">
            <summary>
            Defines the end of an object. This field is constant.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.ValueSeperator">
            <summary>
            Defines the value seperator. This field is constant.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.NameSeperator">
            <summary>
            Defines the object property name and value seperator. This field is constant.
            </summary>       
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.#ctor">
            <summary>
            Initialises a new instance of then JsonWriter class using a
            <see cref="T:System.IO.StringWriter"/> as the underlying 
            <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.#ctor(System.IO.TextWriter,System.Boolean)">
            <summary>
            Initialises a new instance of the JsonWriter class and specifies
            the underlying <see cref="T:System.IO.TextWriter"/> and a value indicating
            if the instance owns the specified TextWriter.
            </summary>
            <param name="writer">The underlying text writer.</param>
            <param name="ownsWriter">True if this instance owns the specified TextWriter,
            otherwise; false.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.WriteBeginArray">
            <summary>
            Writes the start of an array to the underlying data stream.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.WriteEndArray">
            <summary>
            Writes the end of an array to the underlying data stream.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.WriteBeginObject">
            <summary>
            Writes the start of an object to the underlying data stream.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.WriteEndObject">
            <summary>
            Writes the end of an object to the underlying data stream.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.WriteName(System.String)">
            <summary>
            Writes a object property name to the underlying data stream.
            </summary>
            <param name="value">The property name.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.WriteValue(System.String)">
            <summary>
            Writes a raw string value to the underlying data stream.
            </summary>
            <param name="value">The string to write.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.Close">
            <summary>
            Closes this writer.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this instance.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.PreWrite(NetServ.Net.Json.JsonTokenType)">
            <summary>
            Performs any assertions and / or write operations needed before the specified
            token is written to the underlying stream.
            </summary>
            <param name="token">The next token to be written.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.PostWrite(NetServ.Net.Json.JsonTokenType)">
            <summary>
            Performs any post write operations needed after the specified
            token has been written to the underlying stream.
            </summary>
            <param name="token">The token written.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonWriter.Dispose(System.Boolean)">
            <summary>
            Disposed of this instance.
            </summary>
            <param name="disposing">True if being called explicitly, otherwise; false
            to indicate being called implicitly by the GC.</param>
        </member>
        <member name="P:NetServ.Net.Json.JsonWriter.CurrentToken">
            <summary>
            Gets or sets the current lexical JsonToken.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.JsonWriter.CurrentStruct">
            <summary>
            Peeks at the top structure on the 
            <see cref="P:NetServ.Net.Json.JsonWriter.StructStack"/>.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.JsonWriter.StructStack">
            <summary>
            Gets the stack of structure types. DO NOT push 
            <see cref="F:NetServ.Net.Json.JsonStructType.None"/> onto the stack.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.JsonWriter.OwnsWriter">
            <summary>
            Gets a value indicating if this instance owns it's 
            <see cref="P:NetServ.Net.Json.JsonWriter.Writer"/>.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.JsonWriter.Writer">
            <summary>
            Gets the underlying <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.ST.SOK">
            <summary>
            State OK.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.ST.ERR">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.ST.AIO">
            <summary>
            Assert in object.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.ST.AIA">
            <summary>
            Assert in array.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonWriter.ST.AIS">
            <summary>
            Assert in struct.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonStructType">
            <summary>
            Defines the JavaScript Object Notation structure types.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonStructType.None">
            <summary>
            No structure.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonStructType.Array">
            <summary>
            A Json array structure.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonStructType.Object">
            <summary>
            A Json object structure.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.IJsonNull">
            <summary>
            Defines a JavaScipt Object Notation Null.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.IndentedJsonWriter">
            <summary>
            Provided support for writing JavaScript Object Notation data types to an
            underlying <see cref="T:System.IO.TextWriter"/> whilst indenting the output.
            </summary>   
        </member>
        <member name="M:NetServ.Net.Json.IndentedJsonWriter.#ctor">
            <summary>
            Initialises a new instance of then IndentedJsonWriter class using a
            <see cref="T:System.IO.StringWriter"/> as the underlying 
            <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.IndentedJsonWriter.#ctor(System.IO.TextWriter,System.Boolean)">
            <summary>
            Initialises a new instance of the IndentedJsonWriter class and specifies
            the underlying <see cref="T:System.IO.TextWriter"/> and a value indicating
            if the instance owns the specified TextWriter.
            </summary>
            <param name="writer">The underlying text writer.</param>
            <param name="ownsWriter">True if this instance owns the specified TextWriter,
            otherwise; false.</param>
        </member>
        <member name="M:NetServ.Net.Json.IndentedJsonWriter.PreWrite(NetServ.Net.Json.JsonTokenType)">
            <summary>
            Performs any assertions and / or write operations needed before the specified
            token is written to the underlying stream.
            </summary>
            <param name="token">The next token to be written.</param>
        </member>
        <member name="M:NetServ.Net.Json.IndentedJsonWriter.WriteIndent">
            <summary>
            Writes the indent to the underlying stream.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.IndentedJsonWriter.IndentString">
            <summary>
            Gets or sets the string used to indent the output.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.IndentedJsonWriter.IndentLevel">
            <summary>
            Gets or sets the indent level.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonNumber">
            <summary>
            Represents a JavaScript Object Notation Number data type. This class cannot 
            be inherited.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.IJsonNumber">
            <summary>
            Defines a JavaScipt Object Notation Number data type.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.IJsonNumber.Value">
            <summary>
            Gets the value of the Json number.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonNumber.MinValue">
            <summary>
            Defines the smallest Json number. This field is readonly.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonNumber.Zero">
            <summary>
            Defines a Json number with a value of zero. This field is readonly.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonNumber.MaxValue">
            <summary>
            Defines the lasrgest Json number. This field is readonly.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.#ctor(System.Byte)">
            <summary>
            Initialises a new instance of the JsonNumber class and specifies the 
            value.
            </summary>
            <param name="value">The value of the new instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.#ctor(System.SByte)">
            <summary>
            Initialises a new instance of the JsonNumber class and specifies the 
            value.
            </summary>
            <param name="value">The value of the new instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.#ctor(System.Int16)">
            <summary>
            Initialises a new instance of the JsonNumber class and specifies the 
            value.
            </summary>
            <param name="value">The value of the new instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.#ctor(System.UInt16)">
            <summary>
            Initialises a new instance of the JsonNumber class and specifies the 
            value.
            </summary>
            <param name="value">The value of the new instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.#ctor(System.Int32)">
            <summary>
            Initialises a new instance of the JsonNumber class and specifies the 
            value.
            </summary>
            <param name="value">The value of the new instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.#ctor(System.UInt32)">
            <summary>
            Initialises a new instance of the JsonNumber class and specifies the 
            value.
            </summary>
            <param name="value">The value of the new instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.#ctor(System.Int64)">
            <summary>
            Initialises a new instance of the JsonNumber class and specifies the 
            value.
            </summary>
            <param name="value">The value of the new instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.#ctor(System.UInt64)">
            <summary>
            Initialises a new instance of the JsonNumber class and specifies the 
            value.
            </summary>
            <param name="value">The value of the new instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.#ctor(System.Double)">
            <summary>
            Initialises a new instance of the JsonNumber class and specifies the 
            value.
            </summary>
            <param name="value">The value of the new instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.Write(NetServ.Net.Json.IJsonWriter)">
            <summary>
            Writes the contents of this Json type using the specified
            <see cref="T:NetServ.Net.Json.IJsonWriter"/>.
            </summary>
            <param name="writer">The Json writer.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this JsonNumber instance.
            </summary>
            <returns> <see cref="T:System.String"/> representation of this JsonNumber instance</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this JsonNumber instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The culture specific format provider.</param>
            <returns> <see cref="T:System.String"/> representation of this JsonNumber instance</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.Equals(System.Object)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the specified object is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.Equals(NetServ.Net.Json.JsonNumber)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            JsonNumber.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified instance is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.Equals(NetServ.Net.Json.IJsonNumber)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:NetServ.Net.Json.IJsonNumber"/>.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified instance is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.Equals(System.Double)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:System.Double"/>.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified double is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.CompareTo(NetServ.Net.Json.JsonNumber)">
            <summary>
            Returns a value indicating equality with the specified instance.
            </summary>
            <param name="other">The JsonNumber to compare.</param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.CompareTo(NetServ.Net.Json.IJsonNumber)">
            <summary>
            Returns a value indicating equality with the specified instance.
            </summary>
            <param name="other">The <see cref="T:NetServ.Net.Json.IJsonNumber"/> to compare.</param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.CompareTo(System.Double)">
            <summary>
            Returns a value indicating equality with the specified <see cref="T:System.Double"/>.
            </summary>
            <param name="other">The Double to compare.</param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.Equals(NetServ.Net.Json.JsonNumber,NetServ.Net.Json.JsonNumber)">
            <summary>
            Determines if the two <see cref="T:NetServ.Net.Json.JsonNumber"/>s are
            equal.
            </summary>
            <param name="a">The first JsonNumber.</param>
            <param name="b">The second JsonNumber.</param>
            <returns>True if the JsonNumbers are equal, otherwise; false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Equality(NetServ.Net.Json.JsonNumber,NetServ.Net.Json.JsonNumber)">
            <summary>
            Equality operator.
            </summary>
            <param name="a">The first JsonNumber.</param>
            <param name="b">The second JsonNumber.</param>
            <returns>True if the JsonNumbers are equal, otherwise; false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Inequality(NetServ.Net.Json.JsonNumber,NetServ.Net.Json.JsonNumber)">
            <summary>
            Inequality operator.
            </summary>
            <param name="a">The first JsonNumber.</param>
            <param name="b">The second JsonNumber.</param>
            <returns>True if the JsonNumbers are not equal, otherwise; false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(System.Byte)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implict conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(System.SByte)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implict conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(System.Int16)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implict conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(System.UInt16)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implict conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(System.Int32)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implict conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(System.UInt32)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implict conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(System.Int64)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implict conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(System.UInt64)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implict conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(System.Double)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implict conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Implicit(NetServ.Net.Json.JsonNull)~NetServ.Net.Json.JsonNumber">
            <summary>
            Implicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns>This method always returns null.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Explicit(NetServ.Net.Json.JsonNumber)~System.Double">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Explicit(NetServ.Net.Json.JsonNumber)~System.Byte">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Explicit(NetServ.Net.Json.JsonNumber)~System.SByte">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Explicit(NetServ.Net.Json.JsonNumber)~System.Int16">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Explicit(NetServ.Net.Json.JsonNumber)~System.UInt16">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Explicit(NetServ.Net.Json.JsonNumber)~System.Int32">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Explicit(NetServ.Net.Json.JsonNumber)~System.UInt32">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Explicit(NetServ.Net.Json.JsonNumber)~System.Int64">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNumber.op_Explicit(NetServ.Net.Json.JsonNumber)~System.UInt64">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NetServ.Net.Json.JsonNumber.Value">
            <summary>
            Gets the value of this JsonNumber.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonTypeCode">
            <summary>
            Defines the different types of Json structures and primitives.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTypeCode.String">
            <summary>
            A unicode encoded string.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTypeCode.Number">
            <summary>
            A number.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTypeCode.Boolean">
            <summary>
            A boolean value represented by literal "true" and "false".
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTypeCode.Null">
            <summary>
            A null value.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTypeCode.Object">
            <summary>
            A structured object containing zero or more name/value pairs, delimited by 
            curly brackets.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTypeCode.Array">
            <summary>
            An unordered collection of values, delimted by square brackets.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.IJsonObject">
            <summary>
            Defines a JavaScript Object Notation Object data type.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.IJsonString">
            <summary>
            Defines a JavaScipt Object Notation String data type.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.IJsonString.Value">
            <summary>
            Gets the value of the Json string.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonTokenType">
            <summary>
            Defines the high level Json tokens.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTokenType.None">
            <summary>
            No token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTokenType.BeginArray">
            <summary>
            The start of array token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTokenType.EndArray">
            <summary>
            The end of array token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTokenType.BeginObject">
            <summary>
            The start of object token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTokenType.EndObject">
            <summary>
            The end of object token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTokenType.Name">
            <summary>
            An object property name token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonTokenType.Value">
            <summary>
            A value token.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonObject">
            <summary>
            Represents a JavaScript Object Notation Object data type which contains a 
            collection of <see cref="T:NetServ.Net.Json.IJsonType"/>s accessed by key.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialisation constructor.
            </summary>
            <param name="info">The object containing the data needed to deserialise an instance.</param>
            <param name="context">The boejct which specifies the source of the deserialisation.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.#ctor">
            <summary>
            Inialises a new instance of the JsonObject class.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Write(NetServ.Net.Json.IJsonWriter)">
            <summary>
            Writes the contents of this Json type using the specified
            <see cref="T:NetServ.Net.Json.IJsonWriter"/>.
            </summary>
            <param name="writer">The Json writer.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.String)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.Boolean)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.Byte)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.SByte)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.Int16)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.UInt16)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.Int32)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.UInt32)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.Int64)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.UInt64)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.Add(System.String,System.Double)">
            <summary>
            Adds the specified key and item to this dictionary.
            </summary>
            <param name="key">The key of the item</param>
            <param name="item">The value of the item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonObject.op_Implicit(NetServ.Net.Json.JsonNull)~NetServ.Net.Json.JsonObject">
            <summary>
            Implicit conversion operator.
            </summary>
            <param name="value"></param>
            <returns>This method always returns null.</returns>
        </member>
        <member name="P:NetServ.Net.Json.JsonObject.JsonTypeCode">
            <summary>
            Returns the JsonTypeCode for this instance.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonNull">
            <summary>
            Represents a Json null value. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonNull.NullString">
            <summary>
            Defines the JsonNull string. This field is constant.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonNull.Null">
            <summary>
            Defines a JsonNull instance. This field is readonly.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonNull.Write(NetServ.Net.Json.IJsonWriter)">
            <summary>
            Writes the contents of this Json type using the specified
            <see cref="T:NetServ.Net.Json.IJsonWriter"/>.
            </summary>
            <param name="writer">The Json writer.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonNull.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this JsonNull instance.
            </summary>
            <returns> <see cref="T:System.String"/> representation of this JsonNull instance.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNull.Equals(System.Object)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the specified object is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNull.Equals(NetServ.Net.Json.JsonNull)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            JsonNull.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified instance is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNull.Equals(NetServ.Net.Json.IJsonNull)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:NetServ.Net.Json.IJsonNull"/>.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified instance is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNull.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNull.Map``1(NetServ.Net.Json.IJsonType)">
            <summary>
            Maps the specified value to the type of the type paramater.
            </summary>
            <typeparam name="T">The type to map to.</typeparam>
            <param name="value">The value to map.</param>
            <returns>The mapped value if not logically null, otherwise the default value of 
            <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonNull.#ctor">
            <summary>
            Initialises a new instance of the JsonNull class.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonString">
            <summary>
            Represents a JavaScript Object Notation String data type. This class cannot 
            be inherited.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonString.Empty">
            <summary>
            Defines an empty JsonString. This field is readonly.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.#ctor(System.String)">
            <summary>
            Initialises a new instance of the JsonString class and specifies the
            value.
            </summary>
            <param name="value">The value of the instance.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.Write(NetServ.Net.Json.IJsonWriter)">
            <summary>
            Writes the contents of this Json type using the specified
            <see cref="T:NetServ.Net.Json.IJsonWriter"/>.
            </summary>
            <param name="writer">The Json writer.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this JsonString 
            instance.
            </summary>
            <returns> <see cref="T:System.String"/> representation of this JsonString 
            instance.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.Equals(System.Object)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True if the specified object is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.Equals(NetServ.Net.Json.JsonString)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            JsonString.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified instance is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.Equals(NetServ.Net.Json.IJsonString)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:NetServ.Net.Json.IJsonString"/>.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified instance is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.Equals(System.String)">
            <summary>
            Returns a indicating whether this instance is equal to the specified
            <see cref="T:System.String"/>.
            </summary>
            <param name="other">The value to compare.</param>
            <returns>True if the specified instance is equal to this instance, otherwise;
            false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.CompareTo(NetServ.Net.Json.JsonString)">
            <summary>
            Returns a value indicating equality with the specified instance.
            </summary>
            <param name="other">The JsonNumber to compare.</param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.CompareTo(NetServ.Net.Json.IJsonString)">
            <summary>
            Returns a value indicating equality with the specified
            <see cref="T:NetServ.Net.Json.IJsonString"/>.
            </summary>
            <param name="other">The <see cref="T:NetServ.Net.Json.IJsonString"/> to 
            compare.</param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.CompareTo(System.String)">
            <summary>
            Returns a value indicating equality with the specified <see cref="T:System.String"/>.
            </summary>
            <param name="other">The String to compare.</param>
            <returns></returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.GetHashCode">
            <summary>
            Returns a hash code for this JsonString.
            </summary>
            <returns>A hash code for this JsonString.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.Equals(NetServ.Net.Json.JsonString,NetServ.Net.Json.JsonString)">
            <summary>
            Determines if the two <see cref="T:NetServ.Net.Json.JsonString"/>s are
            equal.
            </summary>
            <param name="a">The first JsonString.</param>
            <param name="b">The second JsonString.</param>
            <returns>True if the JsonStrings are equal, otherwise; false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.op_Equality(NetServ.Net.Json.JsonString,NetServ.Net.Json.JsonString)">
            <summary>
            Equality operator.
            </summary>
            <param name="a">The first JsonString.</param>
            <param name="b">The second JsonString.</param>
            <returns>True if the JsonStrings are equal, otherwise; false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.op_Inequality(NetServ.Net.Json.JsonString,NetServ.Net.Json.JsonString)">
            <summary>
            Inequality operator.
            </summary>
            <param name="a">The first JsonString.</param>
            <param name="b">The second JsonString.</param>
            <returns>True if the JsonStrings are not equal, otherwise; false.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.op_Implicit(System.String)~NetServ.Net.Json.JsonString">
            <summary>
            Implicit conversion operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.op_Implicit(NetServ.Net.Json.JsonNull)~NetServ.Net.Json.JsonString">
            <summary>
            Implicit conversion operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>This method always returns null.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.op_Explicit(NetServ.Net.Json.JsonString)~System.String">
            <summary>
            Explicit conversion operator.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonString.Encode(System.String)">
            <summary>
            Encodes the specified <see cref="T:System.String"/>.
            </summary>
            <param name="s">The string to encode.</param>
            <returns>The encoded string.</returns>
        </member>
        <member name="P:NetServ.Net.Json.JsonString.Value">
            <summary>
            Gets the un-encoded value of the this JsonString.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.JsonString.EncodedValue">
            <summary>
            Gets the encoded value of this JsonString.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.IJsonArray">
            <summary>
            Defines a JavaScript Object Notation Array data type.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonArray">
            <summary>
            Represents a JavaScript Object Notation Array data type which contains a 
            collection of <see cref="T:NetServ.Net.Json.IJsonType"/>s.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.InsertItem(System.Int32,NetServ.Net.Json.IJsonType)">
            <summary>
            Inserts the specified <paramref name="item"/> into this collection at the
            specified <paramref name="index"/>.
            </summary>
            <param name="index">The index at which to insert the item.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.SetItem(System.Int32,NetServ.Net.Json.IJsonType)">
            <summary>
            Replaces an item at the specified <paramref name="index"/>.
            </summary>
            <param name="index">The index of the item to replace.</param>
            <param name="item">The replacement item.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.ValidateItem(NetServ.Net.Json.IJsonType)">
            <summary>
            Validates the specified <paramref name="item"/> before insertion or 
            setting.
            </summary>
            <param name="item">The item to validate.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.#ctor">
            <summary>
            Inialises a new instance of the JsonArray class.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Write(NetServ.Net.Json.IJsonWriter)">
            <summary>
            Writes the contents of this Json type using the specified
            <see cref="T:NetServ.Net.Json.IJsonWriter"/>.
            </summary>
            <param name="writer">The Json writer.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.String)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.Boolean)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.Byte)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.SByte)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.Int16)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.UInt16)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.Int32)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.UInt32)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.Int64)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.UInt64)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.Add(System.Double)">
            <summary>
            Adds the specified item to this collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonArray.op_Implicit(NetServ.Net.Json.JsonNull)~NetServ.Net.Json.JsonArray">
            <summary>
            Implicit conversion operator.
            </summary>
            <param name="value">JsonNull value.</param>
            <returns>This method always returns null.</returns>
        </member>
        <member name="P:NetServ.Net.Json.JsonArray.JsonTypeCode">
            <summary>
            Returns the JsonTypeCode for this instance.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonParser">
            <summary>
            Provided support for parsing JavaScript Object Notation data types from
            an underlying <see cref="T:System.IO.TextReader"/>.
            </summary>    
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.#ctor(System.IO.TextReader,System.Boolean)">
            <summary>
            Initialises a new instance of the JsonParser class and specifies the source
            <see cref="T:System.IO.TextReader"/> and a value indicating if the instance
            owns the specified TextReader.
            </summary>
            <param name="rdr">The underlying TextReader.</param>
            <param name="ownsReader">True if this instance owns the TextReader, otherwise; 
            false.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.NextToken">
            <summary>
            Classifies the next token on the underlying stream.
            </summary>
            <returns>The classification of the next token from the underlying stream.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.ParseBoolean">
            <summary>
            Parses a <see cref="T:NetServ.Net.Json.JsonBoolean"/> from the underlying
            stream.
            </summary>
            <returns>The parsed JsonBoolean.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.ParseNull">
            <summary>
            Parses a <see cref="T:NetServ.Net.Json.JsonNull"/> from the underlying
            stream.
            </summary>
            <returns>The parsed JsonNull.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.ParseNumber">
            <summary>
            Parses a <see cref="T:NetServ.Net.Json.JsonNumber"/> from the underlying
            stream.
            </summary>
            <returns>The parsed JsonNumber.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.ParseObject">
            <summary>
            Parses a <see cref="T:NetServ.Net.Json.JsonObject"/> and all contained types 
            from the underlying stream.
            </summary>
            <returns>The parsed JsonObject.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.ParseArray">
            <summary>
            Parses a <see cref="T:NetServ.Net.Json.JsonArray"/> and all contained types 
            from the underlying stream.
            </summary>
            <returns>The parsed JsonArray.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.ParseString">
            <summary>
            Parses a <see cref="T:NetServ.Net.Json.JsonString"/> from the underlying stream.
            </summary>
            <returns>The parsed JsonString.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.ParseNext">
            <summary>
            Parses the next type from the underlying stream.
            </summary>
            <returns>The next type from the underlying stream.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.ParseNext(NetServ.Net.Json.JsonParser.TokenType)">
            <summary>
            Parses the specified <paramref name="type"/> from the underlying stream.
            </summary>
            <param name="type">The type to parse.</param>
            <returns>The type parsed from the underlying stream.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.Close">
            <summary>
            Closes this parser.
            </summary>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.Peek">
            <summary>
            Peeks at and returns a single character from the underlying stream.
            </summary>
            <returns>The character, otherwise; -1 if the end of the stream has been reached.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.Peek(System.Boolean)">
            <summary>
            Peeks at the next character from the underlying stream and specifies a value
            which indicates whether white space characters should be advanced over.
            </summary>
            <param name="skipWhite">True to skip white space characters, otherwise; false.</param>
            <returns>The next character from the underlying stream, or -1 if the end
            has been reached.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.Read">
            <summary>
            Reads and returns a single character from the underlying stream.
            </summary>
            <returns>The character, otherwise; -1 if the end of the stream has been reached.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.Read(System.Boolean)">
            <summary>
            Reads the next character from the underlying stream and specified a value
            which indicates whether white space characters should be skipped.
            </summary>
            <param name="skipWhite">True to skip white space characters, otherwise; false.</param>
            <returns>The next character from the underlying stream, or -1 if the end
            has been reached.</returns>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.AssertDepth(System.Int32)">
            <summary>
            Asserts that the specified depth does not exceed 
            <see cref="P:NetServ.Net.Json.JsonParser.MaximumDepth"/>. If the depth has been
            exceeded, a <see cref="T:System.FormatException"/> is thrown.
            </summary>
            <param name="depth">The depth.</param>
        </member>
        <member name="M:NetServ.Net.Json.JsonParser.Dispose(System.Boolean)">
            <summary>
            Disposed of this instance.
            </summary>
            <param name="disposing">True if being called explicitly, otherwise; false
            to indicate being called implicitly by the GC.</param>
        </member>
        <member name="P:NetServ.Net.Json.JsonParser.Depth">
            <summary>
            Gets the current depth of the parser.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.JsonParser.MaximumDepth">
            <summary>
            Gets or sets the maximum depth of structures before a 
            <see cref="T:System.FormatException"/> is thrown.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.JsonParser.OwnsReader">
            <summary>
            Gets a value indicating if this instance owns it's 
            <see cref="P:NetServ.Net.Json.TextParser.Reader"/>.
            </summary>
        </member>
        <member name="P:NetServ.Net.Json.JsonParser.Reader">
            <summary>
            Gets the underlying <see cref="T:System.IO.TextReader"/>.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonParser.TokenType">
            <summary>
            
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.BeginArray">
            <summary>
            Begin array token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.EndArray">
            <summary>
            End array token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.BeginObject">
            <summary>
            Begin object token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.EndObject">
            <summary>
            End object token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.ValueSeperator">
            <summary>
            Member seperator token
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.NameSeperator">
            <summary>
            Object property name / value seperator token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.String">
            <summary>
            Start of string token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.Number">
            <summary>
            Start of number token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.Boolean">
            <summary>
            Start of boolean token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.Null">
            <summary>
            Start of null token.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.TokenType.EOF">
            <summary>
            End of input token.
            </summary>
        </member>
        <member name="T:NetServ.Net.Json.JsonParser.SpState">
            <summary>
            Structure parse state.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.SpState.Initial">
            <summary>
            Initial.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.SpState.ReqValue">
            <summary>
            A value is required.
            </summary>
        </member>
        <member name="F:NetServ.Net.Json.JsonParser.SpState.SepValid">
            <summary>
            A seperator is currently valid.
            </summary>
        </member>
    </members>
</doc>
