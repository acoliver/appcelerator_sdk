#!/usr/bin/ruby
#
# Appcelerator SDK
#
# Copyright (C) 2006-2007 by Appcelerator, Inc. All Rights Reserved.
# For more information, please visit http://www.appcelerator.org
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

require 'pathname'
require 'erb'
require 'md5'
require 'socket'
require 'fileutils'
require 'activesupport'
require 'appcelerator'
require 'optparse'

if ARGV.length == 0
   ARGV.push << '-h' 
end

OPTIONS = {}

ARGV.options do |o|
    script_name = File.basename($0)
    o.set_summary_indent '  '
    o.banner = "Usage: #{script_name} [OPTIONS]"
    o.define_head "\nAppcelerator Platform SDK for Ruby on Rails"
    o.separator ' '

    o.on('-v','--version','Show installed Appcelerator version') { puts Appcelerator::VERSION; exit; }

    o.on('-u','--update','Check for any updates to Appcelerator') do
        require 'appcelerator/update'
        version, params = Appcelerator::Update.up2date? true
        if not version
            puts 'No updates found'
        end
        exit
    end
    
    o.on_tail("-h", "--help", "Show this help message.") { puts o; exit }
    o.parse!
end

app_path = ARGV.last

system("rails  #{ARGV.join(' ')}>> rails.log")

FileUtils.rm_r 'rails.log'

p = Pathname.new(app_path)

secret_auth_key = Digest::MD5.hexdigest(Time.new.to_s + self.inspect + IPSocket.getaddress(Socket::gethostname).to_s)   

# 
# remove rails files
#
FileUtils.rm_r "#{p}/public/javascripts"

#
# add appcelerator files
#
APP_GEM = Gem.cache.search('appcelerator').last.full_gem_path
FileUtils.mkdir "#{p}/public/javascripts"
FileUtils.mkdir "#{p}/app/services"

FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/appcelerator.xml", "#{p}/public"
rails_gem = Gem.cache.search('rails').last
if rails_gem.version.to_s.to_f > 1.2
  FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/application.rb", "#{p}/app/controllers"
end
f = File.open("#{p}/config/environment.rb", 'a')
f.write("\n\nrequire 'appcelerator'")
f.close

FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/index.html", "#{p}/public"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/images", "#{p}/public"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/javascripts", "#{p}/public"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/modules", "#{p}/public"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/README", "#{p}"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/routes.rb", "#{p}/config"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/proxy_controller.rb", "#{p}/app/controllers"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/service_broker_controller.rb", "#{p}/app/controllers"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/upload_controller.rb", "#{p}/app/controllers"
FileUtils.mkdir "#{p}/app/views/upload"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/upload_index.rhtml", "#{p}/app/views/upload/index.rhtml"
result = ERB.new(File.read("#{p}/app/controllers/service_broker_controller.rb")).result(binding)
f = File.new("#{p}/app/controllers/service_broker_controller.rb",'w')
f.write(result)
f.close
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/service_broker_helper.rb", "#{p}/app/helpers"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/servicetester.html", "#{p}/public"
FileUtils.cp_r "#{APP_GEM}/appcelerator/templates/test_service.rb", "#{p}/app/services"

# write out our version file
version = {"site"=>"http://updatesite.appcelerator.org","version"=>"#{Appcelerator::VERSION}"}
File.open("#{p}/config/version.yml",'w').puts version.to_yaml

# replace the XML with the correct sessionid
projectname = File.basename(p)
xml = File.read("#{p}/public/appcelerator.xml")
if rails_gem.version.to_s.to_f > 1.2
  xml.gsub!(/SESSIONID/,"_#{projectname}_session")
else
  xml.gsub!(/SESSIONID/,"_#{projectname}_session_id")
end
File.open("#{p}/public/appcelerator.xml",'w').puts xml

puts "Successfully created new Appcelerator project in '#{app_path}'"
