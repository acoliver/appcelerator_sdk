<?xml version="1.0"?>

<project name="Appcelerator Platform SDK for Java" default="create" basedir=".">

    <description>Appcelerator Platform SDK for Java</description>

    <property file="${user.home}/.ant.properties"/>
    <property file="build.properties"/>

	<property name="dist.dir" value="dist/server"/>
	<path id="classpath">
		<fileset dir="dist/lib" includes="*.jar"/>
	</path>
	
	<target name="clean">
		<delete dir="stage"/>
	</target>
		
	<target name="banner">
		<echo>Appcelerator Platform SDK for Java</echo>
		<echo>Licensed under the GNU GPL version 2</echo>
		<echo>Please read LICENSE for more details on usage</echo>
	</target>
	
	<target name="prompt.deploy.dir" unless="deploy.dir">
		<echo>Deploy the Appcelerator Server</echo>
		<input defaultvalue="deploy.dir" message="Where would you like to deploy?" addproperty="deploy.dir" />
	</target>
	<target name="deploy_server" depends="banner">
		<antcall target="prompt.deploy.dir"/>
		<available file="${deploy.dir}" type="dir" property="deploy.dir.exists" />
		<fail unless="deploy.dir.exists">Directory ${deploy.dir} doesn't exist.</fail>
		<copy todir="${deploy.dir}">
			<fileset dir="${dist.dir}" includes="*.war" />
		</copy>
	</target>
	<target name="undeploy_server">
		<available file="${deploy.dir}/appcelerator" type="dir" property="appcelerator.deploy.dir.exists"/>
		<available file="${deploy.dir}/appcelerator.war" type="file" property="appcelerator.deploy.war.exists"/>
		<antcall target="undeploy.war"/>
		<antcall target="undeploy.dir"/>
	</target>
	<target name="undeploy.dir" if="appcelerator.deploy.dir.exists">
		<delete dir="${deploy.dir}/appcelerator"/>
	</target>
	<target name="undeploy.war" if="appcelerator.deploy.war.exists">
		<delete file="${deploy.dir}/appcelerator.war"/>
	</target>
	<target name="update" description="** updates an existing appcelerator project to this version of the sdk">
		<echo>Updating an existing Appcelerator Java project.</echo>
		<echo message=""/>
		<input message="Where does the project exist?" addproperty="create.dir"/>
		<available file="${create.dir}/build.properties" type="file" property="create.dir.exists" />
		<fail unless="create.dir.exists">Directory ${create.dir} doesn't exist.</fail>
		<property file ="${create.dir}/build.properties"/>
		<echo>updating application ${app.name}</echo>

		<input message="would you like to overwrite project specific src/web and build scripts including build.xml, build.properties, SampleService.java, index.html, appcelerator.xml and servicetester.html?" validargs="y,n" addproperty="overwrite.projectspecific.input"/>
		<condition property="overwrite.projectspecific">
			<equals arg1="y" arg2="${overwrite.projectspecific.input}"/>
		</condition> 

		<input message="would you like to overwrite the lib, examples, server, sample java, test, doc and platform web source?" validargs="y,n" addproperty="overwrite.plat.input"/>
		<condition property="overwrite.plat">
			<equals arg1="y" arg2="${overwrite.plat.input}"/>
		</condition> 

		<antcall target="overwrite.projectspecific"/>
		<antcall target="overwrite.plat"/>
		<echo>congrads you are set</echo>
	</target>
	<target name="overwrite.plat" if="overwrite.plat">
		<echo>overwriting platform</echo>
		<delete>
			<fileset dir="${create.dir}/lib/appcelerator"/>
			<fileset dir="${create.dir}/doc"/>
			<fileset dir="${create.dir}/examples"/>
			<fileset dir="${create.dir}/server"/>
			<fileset dir="${create.dir}/src/java" includes="SampleService.java"/>
			<fileset dir="${create.dir}/src/web/modules"/>
			<fileset dir="${create.dir}/src/web/js" includes="appcelerator*.*"/>
		</delete>
		<antcall target="create.silent.plat"/>
	</target>
	<target name="overwrite.projectspecific" if="overwrite.projectspecific">
		<echo>overwriting projectspecific items</echo>
		<antcall target="create.silent.projectspecific"/>
	</target>
	<target name="create" depends="banner" description="** Create a new Appcelerator for Java project">
		<echo>Creating a new Appcelerator Java project.</echo>
		<echo message=""/>
		<input message="What would you like to name the project?" addproperty="app.name" />
		<input message="Where would you like to create?" addproperty="create.dir" defaultvalue="${user.home}${file.separator}${app.name}"/>
		<antcall target="create.silent"/>
	</target>
	<target name="create.silent" depends="banner">
		<fail unless="app.name" message="property ${app.name} is not defined"/>
		<available file="${create.dir}" type="dir" property="create.dir.exists" />
 		<fail if="create.dir.exists">Directory ${create.dir} already exists. Please delete it to continue...</fail>
		<antcall target="create.silent.plat"/>
		<antcall target="create.silent.projectspecific"/>
	</target>
	<target name="create.silent.projectspecific" depends="banner">
		<echo>${create.dir}</echo>
		<mkdir dir="${create.dir}" />
		<mkdir dir="${create.dir}/lib/appcelerator" />
		<mkdir dir="${create.dir}/src/java" />
		<mkdir dir="${create.dir}/src/web" />
		<copy todir="${create.dir}" filtering="true" overwrite="true">
			<fileset dir="dist" includes="*.*"/>
			<filterset>
				<filter token="APPNAME" value="${app.name}"/>
				<filter token="APPCELERTOR_DIR" value="${basedir}"/>
			</filterset>
		</copy>
		<copy todir="${create.dir}" filtering="false" overwrite="true">
			<fileset dir="dist" includes="src/**"/>
		</copy>
	</target>

	<target name="create.silent.plat" depends="banner">
		<echo>using excludes ${plat.excludes}</echo>
		<mkdir dir="${create.dir}" />
		<mkdir dir="${create.dir}/lib/appcelerator" />
		<mkdir dir="${create.dir}/src/java" />
		<mkdir dir="${create.dir}/src/web" />
		<copy todir="${create.dir}" filtering="false" overwrite="true">
			<fileset dir="dist" includes="lib/**,server/**,examples/**" excludes="${plat.excludes}"/>
			<fileset dir="." includes="test/**,doc/**" excludes="${plat.excludes}"/>
		</copy>
	</target>
	<target name="script" depends="script.ruby">
		<echo>${dir}</echo>
	</target>
	<target name="script.ruby" depends="copy_script_jars">
		<property name="message" value="Hello world"/>
	    <script language="ruby">
			def getdir prompt
				request =org.apache.tools.ant.input.InputRequest.new prompt
				$project.getInputHandler().handleInput(request)
				request.getInput
			end
			dir =getdir 'whats your filename'
			while File.exists? dir
				dir = getdir 'sorry a file/directory with that name already exists, please reenter:'
			end
			$project.setProperty('dir',dir)
	    </script>
	</target>
	<target name="copy_script_jars">
		<copy todir="${ant.home}/lib">
			<fileset dir="dist/antlib/appcelerator" includes="jruby.jar,asm-2.2.3.jar,asm-commons-2.2.3.jar,bsf.jar,backport-util-concurrent.jar"/>
			<fileset dir="dist/lib/appcelerator" includes="commons-logging-1.0.4.jar"/>
		</copy>
	</target>
	<target name="remove_script_jars">
		<delete>
			<fileset dir="${ant.home}/lib" 
				includes="jruby.jar,asm-2.2.3.jar,asm-commons-2.2.3.jar,bsf.jar,backport-util-concurrent.jar,jline.jar,commons-logging-1.0.4.jar"/>
		</delete>
	</target>
</project>
